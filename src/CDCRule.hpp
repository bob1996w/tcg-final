#pragma once

#define LEFT -1
#define RIGHT 1
#define UP -10
#define DOWN 10

static bool CAN_EAT_BY_MOVE [16][16] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,},
{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,},
{0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,},
{0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,},
{0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,},
};

static bool CAN_EAT_BY_JUMP [16][16] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
{0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
};

static int MOVE_NUM [60] = {
0,0,0,0,0,0,0,0,0,0,
0,2,3,3,3,3,3,3,2,0,
0,3,4,4,4,4,4,4,3,0,
0,3,4,4,4,4,4,4,3,0,
0,2,3,3,3,3,3,3,2,0,
0,0,0,0,0,0,0,0,0,0,
};
static int MOVE_DIR [60][4] = {
{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},
{0,0,0,0,},{1,10,0,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,10,0,0,},{0,0,0,0,},
{0,0,0,0,},{1,-10,10,0,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,-10,10,0,},{0,0,0,0,},
{0,0,0,0,},{1,-10,10,0,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,1,-10,10,},{-1,-10,10,0,},{0,0,0,0,},
{0,0,0,0,},{1,-10,0,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,-10,0,0,},{0,0,0,0,},
{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},
};
static int JUMP_NUM [60] = {
0,0,0,0,0,0,0,0,0,0,
0,2,2,3,3,3,3,2,2,0,
0,2,2,3,3,3,3,2,2,0,
0,2,2,3,3,3,3,2,2,0,
0,2,2,3,3,3,3,2,2,0,
0,0,0,0,0,0,0,0,0,0,
};
static int JUMP_DIR [60][4] = {
{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},
{0,0,0,0,},{1,10,0,0,},{1,10,0,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,10,0,0,},{-1,10,0,0,},{0,0,0,0,},
{0,0,0,0,},{1,10,0,0,},{1,10,0,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,1,10,0,},{-1,10,0,0,},{-1,10,0,0,},{0,0,0,0,},
{0,0,0,0,},{1,-10,0,0,},{1,-10,0,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,-10,0,0,},{-1,-10,0,0,},{0,0,0,0,},
{0,0,0,0,},{1,-10,0,0,},{1,-10,0,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,1,-10,0,},{-1,-10,0,0,},{-1,-10,0,0,},{0,0,0,0,},
{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},{0,0,0,0,},
};

static bool IS_OUT [60] = {
1,1,1,1,1,1,1,1,1,1,
1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,1,
1,1,1,1,1,1,1,1,1,1,
};
